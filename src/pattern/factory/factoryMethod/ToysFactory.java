package pattern.factory.factoryMethod;

import pattern.factory.Toys;

/**
 * 〈工厂方法模式〉
 *
 * 为了将对象的创建和使用相分离，采用工厂模式,即应用程序将对象的创建及初始化职责交给工厂对象.
 *
 * 特点：1.工厂方法模式是对简单工厂模式进一步的解耦，因为在工厂方法模式中是一个子类
 * 对应一个工厂类，而这些工厂类都实现于一个抽象接口。
 * 这相当于是把原本会因为业务代码而庞大的简单工厂类，
 * 拆分成了一个个的工厂类，这样代码就不会都耦合在同一个类里了，就像把一个大
 * 蛋糕切成了多个小蛋糕。
 *
 * 缺点：是每增加一个产品类，就需要增加一个对应的工厂类，增加了额外的开发量。
 *
 * @author gw.Zeng
 * @create 2018/6/16
 * @since 1.0.0
 */
public interface ToysFactory {

    /**
     * 统一出  玩具
     * @return
     */
     Toys getToy();
}
